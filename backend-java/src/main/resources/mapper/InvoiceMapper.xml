<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.fixedasset.mapper.InvoiceMapper">
    <insert id="saveNew" parameterType="com.fixedasset.entity.Invoice" useGeneratedKeys="true" keyProperty="id"> <!--此處的id為實體類中對應的id-->
        INSERT into invoice(number, member_id, discount, total_amount, location_id, void, created_at)
            values
                (#{number}, #{memberId}, #{discount}, #{totalAmount}, #{locationId}, #{voidNum}, #{createdAt})
    </insert>

    <select id="queryCountYearWeek" resultType="com.fixedasset.dto.charts.QueryCountYearWeek">
        SELECT 
            concat(date_part('YEAR', created_at), '-', date_part('WEEK', created_at)) as yearWeek, 
            count(*) as count 
        FROM invoice ${ew.customSqlSegment}  
        GROUP BY concat(date_part('YEAR', created_at), '-', date_part('WEEK', created_at)) ;
    </select>

    <select id="queryCountShop" resultType="com.fixedasset.dto.charts.QueryCountShop">
        SELECT loc.place_name as placeName,  count(inv.id) as count 
        FROM invoice as inv 
        LEFT JOIN location as loc on inv.location_id = loc.id and loc.place_name is not null 
        GROUP BY loc.place_name;
    </select>

    <select id="queryTotalShop" resultType="com.fixedasset.dto.charts.QueryTotalShop">
        SELECT loc.place_name as placeName, sum(total_amount) as total 
        FROM invoice as inv 
        LEFT JOIN location as loc on inv.location_id = loc.id 
        GROUP BY loc.place_name;
    </select>

    <select id="listSalesByProduct" resultType="com.fixedasset.dto.charts.InvoiceSalesDataResult">
        SELECT 
            prod.product_name as productName,
            sum(ii.price) as totalPrice
        FROM invoice as invoice
        LEFT JOIN invoice_item as ii on invoice.id  = ii.invoice_id
        LEFT JOIN product_list as prod on ii.product_id = prod.id 
        LEFT JOIN location as location on invoice.location_id = location.id 
        ${ew.customSqlSegment} AND ii.price IS NOT NULL
        GROUP BY prod.product_name
        ORDER BY sum(ii.price) DESC
        LIMIT 10;
    </select>

    <select id="countSalesByProduct" resultType="com.fixedasset.dto.charts.InvoiceSalesDataResult">
        SELECT 
            prod.product_name as productName,
            sum(ii.qty) as counts
        FROM invoice as invoice
        LEFT JOIN invoice_item as ii on invoice.id  = ii.invoice_id
        LEFT JOIN product_list as prod on ii.product_id = prod.id 
        LEFT JOIN location as location on invoice.location_id = location.id 
        ${ew.customSqlSegment} AND ii.price IS NOT NULL
        GROUP BY prod.product_name
        ORDER BY sum(ii.qty) DESC
        LIMIT 10;
    </select>

    <select id="totalSalesByType" resultType="com.fixedasset.dto.charts.InvoiceSalesDataResult">
        SELECT 
            pt.type_name as typeName,
            sum(ii.price) as totalPrice
        FROM invoice as invoice
        LEFT JOIN invoice_item as ii on invoice.id  = ii.invoice_id
        LEFT JOIN product_list as prod on ii.product_id = prod.id
        LEFT JOIN product_type as pt on prod.type_id = pt.id
        ${ew.customSqlSegment} 
            AND ii.price IS NOT NULL 
            AND prod.type_id IS NOT NULL 
            AND pt.statu = 1 
        GROUP BY pt.type_name 
        ORDER BY sum(ii.price) DESC
        LIMIT 10;
    </select>

    <select id="countSalesByType" resultType="com.fixedasset.dto.charts.InvoiceSalesDataResult">
        SELECT 
            pt.type_name as typeName,
            sum(ii.qty) as counts
        FROM invoice as invoice
        LEFT JOIN invoice_item as ii on invoice.id  = ii.invoice_id
        LEFT JOIN product_list as prod on ii.product_id = prod.id
        LEFT JOIN product_type as pt on prod.type_id = pt.id
        ${ew.customSqlSegment} 
            AND ii.price IS NOT NULL 
            AND prod.type_id IS NOT NULL 
            AND pt.statu = 1 
        GROUP BY pt.type_name 
        ORDER BY sum(ii.qty) DESC
        LIMIT 10;
    </select>

    <select id="countSalesByDept" resultType="com.fixedasset.dto.charts.InvoiceSalesDataResult">
       SELECT 
            dept.dept_name as deptName,
            SUM(ii.qty) as counts 
        FROM invoice as invoice
        LEFT JOIN invoice_item as ii on invoice.id  = ii.invoice_id
        LEFT JOIN product_list as prod on ii.product_id = prod.id
        LEFT JOIN department as dept on prod.dept_id = dept.id
        ${ew.customSqlSegment} 
            AND ii.price IS NOT NULL 
            AND prod.dept_id IS NOT NULL
        GROUP BY dept.dept_name  
        ORDER BY sum(ii.qty) DESC
        LIMIT 10;
    </select>

    <select id="totalSalesByDept" resultType="com.fixedasset.dto.charts.InvoiceSalesDataResult">
       SELECT 
            dept.dept_name as deptName,
            SUM(ii.price) as totalPrice  
        FROM invoice as invoice
        LEFT JOIN invoice_item as ii on invoice.id  = ii.invoice_id
        LEFT JOIN product_list as prod on ii.product_id = prod.id
        LEFT JOIN department as dept on prod.dept_id = dept.id
        ${ew.customSqlSegment} 
            AND ii.price IS NOT NULL 
            AND prod.dept_id IS NOT NULL
        GROUP BY dept.dept_name  
        ORDER BY sum(ii.qty) DESC
        LIMIT 10;
    </select>

    <select id="listAll" resultType="com.fixedasset.dto.InvoiceListDto">
        SELECT * from ( SELECT inv.*, 
            m.name as memberName, m.phone as memberPhone, m.address as memberAddress, 
            mc.name as mcName , loc.place_code as placeCode, loc.place_name as placeName,
            loc.address as address, loc.zip_code as zipCode, loc.country as country
             FROM invoice as inv 
            left join member as m on inv.member_id = m.id 
            left join member_class as mc on m.class  = mc.id 
            left join location as loc on inv.location_id = loc.id ) AS q ${ew.customSqlSegment}
    </select>
</mapper>