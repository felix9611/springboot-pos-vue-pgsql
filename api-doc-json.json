{
    "openapi": "3.0.1",
    "info": {
      "title": "POS System API for PostgreSQL",
      "version": "2.0"
    },
    "servers": [
      {
        "url": "http://localhost:8570",
        "description": "Generated server url"
      }
    ],
    "security": [
      {
        "auth": []
      }
    ],
    "paths": {
      "/sys/user/updateIcon": {
        "put": {
          "tags": [
            "System User"
          ],
          "summary": "Update avatar",
          "operationId": "repass",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SysUser"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/system/country/tax/update": {
        "post": {
          "tags": [
            "Tax Data"
          ],
          "summary": "Update a tax data",
          "operationId": "update",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxableCountry"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/system/country/tax/listAll": {
        "post": {
          "tags": [
            "Tax Data"
          ],
          "summary": "Page and list",
          "operationId": "listAll",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxableCountry"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/system/country/tax/create": {
        "post": {
          "tags": [
            "Tax Data"
          ],
          "summary": "Create a Tax Data",
          "operationId": "create",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TaxableCountry"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/system/country/tax/batch-create": {
        "post": {
          "tags": [
            "Tax Data"
          ],
          "summary": "Batch to import tax datas",
          "operationId": "batchCreate",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/TaxInformationUploadData"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/user/update": {
        "post": {
          "tags": [
            "System User"
          ],
          "summary": "Update a User",
          "operationId": "update_1",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SysUser"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/user/updatePass": {
        "post": {
          "tags": [
            "System User"
          ],
          "summary": "Save new password",
          "operationId": "updatePass",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PassDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/user/self/repass": {
        "post": {
          "tags": [
            "System User"
          ],
          "summary": "Re password in user self",
          "operationId": "repass_1",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ResetPasswordDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/user/save": {
        "post": {
          "tags": [
            "System User"
          ],
          "summary": "Create a User",
          "operationId": "save",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SysUser"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/user/saveRecord": {
        "post": {
          "tags": [
            "System User"
          ],
          "summary": "Save user login record",
          "operationId": "saveRecord",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginRecord"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/user/role/{userId}": {
        "post": {
          "tags": [
            "System User"
          ],
          "summary": "Role setting",
          "operationId": "rolePerm",
          "parameters": [
            {
              "name": "userId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/user/repass": {
        "post": {
          "tags": [
            "System User"
          ],
          "summary": "Re password",
          "operationId": "repass_2",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int64"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/user/list": {
        "post": {
          "tags": [
            "System User"
          ],
          "summary": "Page and list",
          "operationId": "list",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SysUser"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/user/listLoginRecord/{username}": {
        "post": {
          "tags": [
            "System User"
          ],
          "summary": "Get list of user login records by username",
          "operationId": "listRecord",
          "parameters": [
            {
              "name": "username",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/user/delete": {
        "post": {
          "tags": [
            "System User"
          ],
          "summary": "Void a User",
          "operationId": "delete",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/role/update": {
        "post": {
          "tags": [
            "System Role"
          ],
          "operationId": "update_2",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SysRole"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/role/save": {
        "post": {
          "tags": [
            "System Role"
          ],
          "summary": "Create",
          "operationId": "save_1",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SysRole"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/role/perm/{roleId}": {
        "post": {
          "tags": [
            "System Role"
          ],
          "summary": "Setting permission by role id",
          "operationId": "info",
          "parameters": [
            {
              "name": "roleId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/role/delete": {
        "post": {
          "tags": [
            "System Role"
          ],
          "summary": "Void by ids",
          "operationId": "info_1",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "integer",
                    "format": "int64"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/menu/update": {
        "post": {
          "tags": [
            "System Menu"
          ],
          "summary": "Update",
          "operationId": "update_3",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SysMenu"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/menu/save": {
        "post": {
          "tags": [
            "System Menu"
          ],
          "summary": "Create",
          "operationId": "save_2",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SysMenu"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/menu/delete/{id}": {
        "post": {
          "tags": [
            "System Menu"
          ],
          "summary": "Void one by id",
          "operationId": "delete_1",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/stockTake/list": {
        "post": {
          "tags": [
            "Stock Take"
          ],
          "summary": "Page and list",
          "operationId": "listAll_1",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockTakeForm"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/stockTake/item": {
        "post": {
          "tags": [
            "Stock Take"
          ],
          "summary": "Item stock take",
          "operationId": "stockTakeItem",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockTakeDetail"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/stockTake/detail/list": {
        "post": {
          "tags": [
            "Stock Take"
          ],
          "summary": "Stock take detail list",
          "operationId": "stockTakeItemList",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockTakeDetail"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/stockTake/create": {
        "post": {
          "tags": [
            "Stock Take"
          ],
          "summary": "Create",
          "operationId": "saveRecord_1",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StockTakeForm"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/update": {
        "post": {
          "tags": [
            "Product"
          ],
          "summary": "Update",
          "operationId": "updateOne",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductList"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/type/update": {
        "post": {
          "tags": [
            "Product Type"
          ],
          "summary": "Update",
          "operationId": "update_4",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductType"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/type/list": {
        "post": {
          "tags": [
            "Product Type"
          ],
          "summary": "Page and list",
          "operationId": "listAll_2",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductType"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/type/create": {
        "post": {
          "tags": [
            "Product Type"
          ],
          "summary": "Create",
          "operationId": "save_3",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductType"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/type/batch-create": {
        "post": {
          "tags": [
            "Product Type"
          ],
          "summary": "Batch to import",
          "operationId": "batchCreate_1",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductType"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/location/stock/out": {
        "post": {
          "tags": [
            "Product Location"
          ],
          "summary": "Stock out",
          "operationId": "stockOut",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductLocation"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/location/save": {
        "post": {
          "tags": [
            "Product Location"
          ],
          "summary": "Save to location",
          "operationId": "saveQty",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductLocation"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/location/renew": {
        "post": {
          "tags": [
            "Product Location"
          ],
          "summary": "Renew data",
          "operationId": "renewPlace",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductLocationChangeDto"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/location/list": {
        "post": {
          "tags": [
            "Product Location"
          ],
          "summary": "Page and list",
          "operationId": "list_1",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductLocation"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/location/list/all": {
        "post": {
          "tags": [
            "Product Location"
          ],
          "summary": "Lists all",
          "operationId": "listAll_3",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductLocation"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/location/find": {
        "post": {
          "tags": [
            "Product Location"
          ],
          "summary": "Find by location & product",
          "operationId": "findPlace",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductLocation"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/loadFile": {
        "post": {
          "tags": [
            "Product"
          ],
          "summary": "Loading files",
          "operationId": "loadFile",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListFile"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/list": {
        "post": {
          "tags": [
            "Product"
          ],
          "summary": "Page and list",
          "operationId": "list_2",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductList"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/list/all": {
        "post": {
          "tags": [
            "Product"
          ],
          "summary": "List all products",
          "operationId": "listAll_4",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductList"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/findByCode": {
        "post": {
          "tags": [
            "Product"
          ],
          "summary": "Find by product code",
          "operationId": "findByCode",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductList"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/file/upload": {
        "post": {
          "tags": [
            "Product"
          ],
          "summary": "Uploading file",
          "operationId": "uploadOne",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductListFile"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/create": {
        "post": {
          "tags": [
            "Product"
          ],
          "summary": "Create",
          "operationId": "createOne",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductList"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/batch-create": {
        "post": {
          "tags": [
            "Product"
          ],
          "summary": "Batch to import",
          "operationId": "batchCreate_2",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductListUploadDto"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/payment/save": {
        "post": {
          "tags": [
            "Payment"
          ],
          "summary": "Save data",
          "operationId": "savePay",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payment"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/invoice/save": {
        "post": {
          "tags": [
            "Invoice"
          ],
          "summary": "Save Invoice",
          "operationId": "saveName",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/invoice/saveItem": {
        "post": {
          "tags": [
            "Invoice"
          ],
          "summary": "Save items",
          "operationId": "saveItems",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvoiceItem"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/invoice/queryTotalYearWeek": {
        "post": {
          "tags": [
            "Invoice"
          ],
          "summary": "Total sales income by Year & Week",
          "operationId": "queryTotalYearWeek",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/invoice/queryTotalSalesByType": {
        "post": {
          "tags": [
            "Invoice"
          ],
          "summary": "Top 10 sales total income by Type",
          "operationId": "queryTotalSalesByType",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/invoice/queryTotalSalesByDept": {
        "post": {
          "tags": [
            "Invoice"
          ],
          "summary": "Top 10 sales total income by Department",
          "operationId": "queryTotalSalesByDept",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/invoice/querySalesByProduct": {
        "post": {
          "tags": [
            "Invoice"
          ],
          "summary": "Sales count by Product",
          "operationId": "querySalesByProduct",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/invoice/querySalesByProductCounts": {
        "post": {
          "tags": [
            "Invoice"
          ],
          "summary": "Top 10 sales count by Product",
          "operationId": "querySalesByProductCounts",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/invoice/queryCountYearWeek": {
        "post": {
          "tags": [
            "Invoice"
          ],
          "summary": "Count by Year & Week",
          "operationId": "queryCountYearWeek",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/invoice/queryCountSalesByType": {
        "post": {
          "tags": [
            "Invoice"
          ],
          "summary": "Top 10 sales count by Product",
          "operationId": "queryCountSalesByType",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/invoice/queryCountSalesByDept": {
        "post": {
          "tags": [
            "Invoice"
          ],
          "summary": "Top 10 sales count by Department",
          "operationId": "queryCountSalesByDept",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/invoice/list": {
        "post": {
          "tags": [
            "Invoice"
          ],
          "summary": "Page and list",
          "operationId": "listInv",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Invoice"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/inv/record/list": {
        "post": {
          "tags": [
            "InvRecord"
          ],
          "summary": "Page and list",
          "operationId": "listAll_5",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InvRecord"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/vendor/update": {
        "post": {
          "tags": [
            "Vendor"
          ],
          "summary": "Update a vendor",
          "operationId": "update_5",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/vendor/post/findOne": {
        "post": {
          "tags": [
            "Vendor"
          ],
          "summary": "Find one by vendor code or name",
          "operationId": "findOnePost",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/vendor/listAll": {
        "post": {
          "tags": [
            "Vendor"
          ],
          "summary": "Page and list",
          "operationId": "listAll_6",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/vendor/create": {
        "post": {
          "tags": [
            "Vendor"
          ],
          "summary": "Create a vendor",
          "operationId": "create_1",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Vendor"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/vendor/batch-create": {
        "post": {
          "tags": [
            "Vendor"
          ],
          "summary": "Batch create vendors",
          "operationId": "batchCreate_3",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Vendor"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/member/update": {
        "post": {
          "tags": [
            "Member"
          ],
          "summary": "Update",
          "operationId": "update_6",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/member/specialDay/void/{id}": {
        "post": {
          "tags": [
            "Member"
          ],
          "summary": "Void the member special day by id",
          "operationId": "updateSpecialDay",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/member/specialDay/update": {
        "post": {
          "tags": [
            "Member"
          ],
          "summary": "Update the member special day",
          "operationId": "updateSpecialDay_1",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberSpecialDay"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/member/specialDay/save": {
        "post": {
          "tags": [
            "Member"
          ],
          "summary": "Save the member special day",
          "operationId": "saveSpecialDay",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberSpecialDay"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/member/specialDay/list": {
        "post": {
          "tags": [
            "Member"
          ],
          "summary": "List the member special day by member id",
          "operationId": "listAllSpecialDay",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberSpecialDay"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/member/listAll": {
        "post": {
          "tags": [
            "Member"
          ],
          "summary": "Page and list",
          "operationId": "listAll_7",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/member/find": {
        "post": {
          "tags": [
            "Member"
          ],
          "summary": "Find member to the list",
          "operationId": "findMember",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/member/create": {
        "post": {
          "tags": [
            "Member"
          ],
          "summary": "Create",
          "operationId": "save_4",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Member"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/member/class/update": {
        "post": {
          "tags": [
            "Member Class"
          ],
          "summary": "Update",
          "operationId": "update_7",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberClass"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/member/class/listAll": {
        "post": {
          "tags": [
            "Member Class"
          ],
          "summary": "Page and list",
          "operationId": "listAll_8",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberClass"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/member/class/create": {
        "post": {
          "tags": [
            "Member Class"
          ],
          "summary": "Create",
          "operationId": "create_2",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MemberClass"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/member/batch-create": {
        "post": {
          "tags": [
            "Member"
          ],
          "summary": "Batch to import",
          "operationId": "batchCreate_4",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Member"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/location/update": {
        "post": {
          "tags": [
            "Location"
          ],
          "summary": "Create",
          "operationId": "update_8",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/location/post/findOne": {
        "post": {
          "tags": [
            "Location"
          ],
          "summary": "Find one location by string",
          "operationId": "findOnePost_1",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/location/listAll": {
        "post": {
          "tags": [
            "Location"
          ],
          "summary": "Page and list",
          "operationId": "listAll_9",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/location/create": {
        "post": {
          "tags": [
            "Location"
          ],
          "summary": "Create",
          "operationId": "create_3",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Location"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/location/batch-create": {
        "post": {
          "tags": [
            "Location"
          ],
          "summary": "Batch to import",
          "operationId": "batchCreate_5",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Location"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/department/update": {
        "post": {
          "tags": [
            "Department"
          ],
          "summary": "Update a department",
          "operationId": "update_9",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/department/post/findOne": {
        "post": {
          "tags": [
            "Department"
          ],
          "summary": "Find one by department code or name",
          "operationId": "findOne",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/department/listAll": {
        "post": {
          "tags": [
            "Department"
          ],
          "summary": "Page and list",
          "operationId": "listAll_10",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/department/create": {
        "post": {
          "tags": [
            "Department"
          ],
          "summary": "Create a department",
          "operationId": "create_4",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Department"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/department/batch-create": {
        "post": {
          "tags": [
            "Department"
          ],
          "summary": "Batch to import departments",
          "operationId": "batchCreate_6",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Department"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/code_type/update": {
        "post": {
          "tags": [
            "Code Type"
          ],
          "summary": "Update",
          "operationId": "update_10",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeType"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/code_type/listAll": {
        "post": {
          "tags": [
            "Code Type"
          ],
          "summary": "Page and list",
          "operationId": "listAll_11",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeType"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/code_type/getAllValue": {
        "post": {
          "tags": [
            "Code Type"
          ],
          "summary": "Get all value by type",
          "operationId": "getAllValue",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeType"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/code_type/create": {
        "post": {
          "tags": [
            "Code Type"
          ],
          "summary": "Create",
          "operationId": "create_5",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CodeType"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/code_type/batch-create": {
        "post": {
          "tags": [
            "Code Type"
          ],
          "summary": "Batch to import",
          "operationId": "batchCreate_7",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CodeType"
                  }
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/action/listAll": {
        "post": {
          "tags": [
            "Action Record"
          ],
          "summary": "List action records",
          "operationId": "listAll_12",
          "requestBody": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ActionRecordBody"
                }
              }
            },
            "required": true
          },
          "responses": {
            "200": {
              "description": "Sucess",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/test": {
        "get": {
          "tags": [
            "Testing"
          ],
          "summary": "Only test get",
          "operationId": "test",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "type": "object"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/test/pass": {
        "get": {
          "tags": [
            "Testing"
          ],
          "summary": "Test Password ",
          "operationId": "pass",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/system/country/tax/{id}": {
        "get": {
          "tags": [
            "Tax Data"
          ],
          "summary": "Get one by id",
          "operationId": "getOne",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/system/country/tax/getAll": {
        "get": {
          "tags": [
            "Tax Data"
          ],
          "summary": "Get all",
          "operationId": "getAll",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/userInfo": {
        "get": {
          "tags": [
            "Auth"
          ],
          "summary": "Get user information",
          "operationId": "userInfo",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/user/info/{id}": {
        "get": {
          "tags": [
            "System User"
          ],
          "summary": "User information getting",
          "operationId": "info_2",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/role/list": {
        "get": {
          "tags": [
            "System Role"
          ],
          "summary": "Get list",
          "operationId": "list_3",
          "parameters": [
            {
              "name": "name",
              "in": "query",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/role/info/{id}": {
        "get": {
          "tags": [
            "System Role"
          ],
          "summary": "Get one by id",
          "operationId": "info_3",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/menu/nav": {
        "get": {
          "tags": [
            "System Menu"
          ],
          "summary": "Get nav menu by username",
          "operationId": "nav",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/menu/list": {
        "get": {
          "tags": [
            "System Menu"
          ],
          "summary": "List by tree",
          "operationId": "list_4",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/menu/info/{id}": {
        "get": {
          "tags": [
            "System Menu"
          ],
          "summary": "Get one by id",
          "operationId": "info_4",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/stockTake/{id}": {
        "get": {
          "tags": [
            "Stock Take"
          ],
          "summary": "Get by id",
          "operationId": "getForm",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/{id}": {
        "get": {
          "tags": [
            "Product"
          ],
          "summary": "Get by id",
          "operationId": "getOne_1",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/type/{id}": {
        "get": {
          "tags": [
            "Product Type"
          ],
          "summary": "Get by id",
          "operationId": "getOne_2",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/type/getAll": {
        "get": {
          "tags": [
            "Product Type"
          ],
          "summary": "Get all",
          "operationId": "getAll_1",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/payment/list/{invoiceId}": {
        "get": {
          "tags": [
            "Payment"
          ],
          "summary": "Get lists by invoice id",
          "operationId": "listItem",
          "parameters": [
            {
              "name": "invoiceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int32"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/invoice/{number}": {
        "get": {
          "tags": [
            "Invoice"
          ],
          "summary": "Get by invoice no.",
          "operationId": "findOne_1",
          "parameters": [
            {
              "name": "number",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/invoice/queryTotalShop": {
        "get": {
          "tags": [
            "Invoice"
          ],
          "summary": "Total sales income by per shhop / location",
          "operationId": "queryTotalShop",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/invoice/queryCountShop": {
        "get": {
          "tags": [
            "Invoice"
          ],
          "summary": "Count by per shhop / location",
          "operationId": "queryCountShop",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/invoice/item/{invoiceId}": {
        "get": {
          "tags": [
            "Invoice"
          ],
          "summary": "Get items by invoice id",
          "operationId": "listItem_1",
          "parameters": [
            {
              "name": "invoiceId",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/invoice/detail/{id}": {
        "get": {
          "tags": [
            "Invoice"
          ],
          "summary": "Get detail by id",
          "operationId": "findOneDetail",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/captcha": {
        "get": {
          "tags": [
            "Auth"
          ],
          "summary": "Get a Captcha",
          "operationId": "captcha",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/vendor/{id}": {
        "get": {
          "tags": [
            "Vendor"
          ],
          "summary": "Get one by id",
          "operationId": "getOne_3",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/vendor/getAll": {
        "get": {
          "tags": [
            "Vendor"
          ],
          "summary": "Get all vendors",
          "operationId": "getAll_2",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/member/{id}": {
        "get": {
          "tags": [
            "Member"
          ],
          "summary": "Get one by id",
          "operationId": "getOne_4",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/member/specialDay/{id}": {
        "get": {
          "tags": [
            "Member"
          ],
          "summary": "Get the member special day by data id",
          "operationId": "getOneSpecialDay",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/member/getAll": {
        "get": {
          "tags": [
            "Member"
          ],
          "summary": "Get all members",
          "operationId": "getAll_3",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/member/class/{id}": {
        "get": {
          "tags": [
            "Member Class"
          ],
          "summary": "Get one by id",
          "operationId": "getOne_5",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/member/class/getAll": {
        "get": {
          "tags": [
            "Member Class"
          ],
          "summary": "Get all list of member classes",
          "operationId": "getAll_4",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/location/{id}": {
        "get": {
          "tags": [
            "Location"
          ],
          "summary": "Get one by id",
          "operationId": "getOne_6",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/location/getAll": {
        "get": {
          "tags": [
            "Location"
          ],
          "summary": "Get all list of locations",
          "operationId": "getAll_5",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/department/{id}": {
        "get": {
          "tags": [
            "Department"
          ],
          "summary": "Get one by id",
          "operationId": "getOne_7",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/department/getAll": {
        "get": {
          "tags": [
            "Department"
          ],
          "summary": "Get all departments",
          "operationId": "getAll_6",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/code_type/{id}": {
        "get": {
          "tags": [
            "Code Type"
          ],
          "summary": "Get one by id",
          "operationId": "getOne_8",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/system/country/tax/remove/{id}": {
        "delete": {
          "tags": [
            "Tax Data"
          ],
          "summary": "Void one by id",
          "operationId": "voidOne",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/sys/role/void/{id}": {
        "delete": {
          "tags": [
            "System Role"
          ],
          "operationId": "voidById",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/stockTake/void/{id}": {
        "delete": {
          "tags": [
            "Stock Take"
          ],
          "summary": "Void by id",
          "operationId": "voidForm",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/stockTake/finish/{id}": {
        "delete": {
          "tags": [
            "Stock Take"
          ],
          "summary": "Finished by id",
          "operationId": "finishForm",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/void/{id}": {
        "delete": {
          "tags": [
            "Product"
          ],
          "summary": "Void by id",
          "operationId": "voidOne_1",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/type/void/{id}": {
        "delete": {
          "tags": [
            "Product Type"
          ],
          "summary": "Void by id",
          "operationId": "voidOne_2",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/product/file/void/{id}": {
        "delete": {
          "tags": [
            "Product"
          ],
          "summary": "Void file by id",
          "operationId": "voidFileOne",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/invoice/void/{id}": {
        "delete": {
          "tags": [
            "Invoice"
          ],
          "summary": "Void by id",
          "operationId": "voidInvoice",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/vendor/remove/{id}": {
        "delete": {
          "tags": [
            "Vendor"
          ],
          "summary": "Void one by id",
          "operationId": "remove",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/member/remove/{id}": {
        "delete": {
          "tags": [
            "Member"
          ],
          "summary": "Void one by id",
          "operationId": "remove_1",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/member/class/remove/{id}": {
        "delete": {
          "tags": [
            "Member Class"
          ],
          "summary": "Void one by id",
          "operationId": "remove_2",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/location/remove/{id}": {
        "delete": {
          "tags": [
            "Location"
          ],
          "summary": "Void one by id",
          "operationId": "remove_3",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/department/remove/{id}": {
        "delete": {
          "tags": [
            "Department"
          ],
          "summary": "Void one by id",
          "operationId": "remove_4",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      },
      "/base/code_type/remove/{id}": {
        "delete": {
          "tags": [
            "Code Type"
          ],
          "summary": "Void one by id",
          "operationId": "remove_5",
          "parameters": [
            {
              "name": "id",
              "in": "path",
              "required": true,
              "schema": {
                "type": "integer",
                "format": "int64"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            },
            "400": {
              "description": "Bad Request",
              "content": {
                "*/*": {
                  "schema": {
                    "$ref": "#/components/schemas/Result"
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Result": {
          "type": "object",
          "properties": {
            "code": {
              "type": "integer",
              "description": "HTTP Response Code",
              "format": "int32"
            },
            "msg": {
              "type": "string",
              "description": "HTTP Response Message"
            },
            "data": {
              "type": "object",
              "description": "HTTP Response Data"
            }
          }
        },
        "SysRole": {
          "required": [
            "code",
            "name"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The data id, Only apply for response and update apis",
              "format": "int64"
            },
            "created": {
              "type": "string",
              "description": "Created date time,Only apply for response",
              "format": "date-time"
            },
            "updated": {
              "type": "string",
              "description": "Updated date time, Only apply for response",
              "format": "date-time"
            },
            "statu": {
              "type": "integer",
              "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "description": "The data id, Only apply for response and update apis"
            },
            "code": {
              "type": "string",
              "description": "The role code"
            },
            "remark": {
              "type": "string",
              "description": "Remark"
            },
            "menuIds": {
              "type": "array",
              "description": "Listing menu ids, Only apply for response",
              "items": {
                "type": "integer",
                "description": "Listing menu ids, Only apply for response",
                "format": "int64"
              }
            }
          },
          "description": "System Role lists,Only apply for response"
        },
        "SysUser": {
          "required": [
            "email",
            "username"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The data id, Only apply for response and update apis",
              "format": "int64"
            },
            "created": {
              "type": "string",
              "description": "Created date time,Only apply for response",
              "format": "date-time"
            },
            "updated": {
              "type": "string",
              "description": "Updated date time, Only apply for response",
              "format": "date-time"
            },
            "statu": {
              "type": "integer",
              "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
              "format": "int32"
            },
            "username": {
              "type": "string",
              "description": "Username"
            },
            "password": {
              "type": "string",
              "description": "Passeord, use BCrypt encoder"
            },
            "avatar": {
              "type": "string",
              "description": "Avatar URL, Useless"
            },
            "deptId": {
              "type": "integer",
              "description": "Department ID",
              "format": "int32"
            },
            "avatarBase64": {
              "type": "string",
              "description": "Avatar image base64 code"
            },
            "email": {
              "type": "string",
              "description": "Email address"
            },
            "city": {
              "type": "string",
              "description": "City Code"
            },
            "lastLogin": {
              "type": "string",
              "description": "Last Login",
              "format": "date-time"
            },
            "sysRoles": {
              "type": "array",
              "description": "System Role lists,Only apply for response",
              "items": {
                "$ref": "#/components/schemas/SysRole"
              }
            },
            "page": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            }
          }
        },
        "TaxableCountry": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The data id, Only apply for response and update apis",
              "format": "int64"
            },
            "created": {
              "type": "string",
              "description": "Created date time,Only apply for response",
              "format": "date-time"
            },
            "updated": {
              "type": "string",
              "description": "Updated date time, Only apply for response",
              "format": "date-time"
            },
            "statu": {
              "type": "integer",
              "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
              "format": "int32"
            },
            "nationCode": {
              "type": "string",
              "description": "Nation Code"
            },
            "nationName": {
              "type": "string",
              "description": "Nation Name"
            },
            "countryCode": {
              "type": "string",
              "description": "Country Code"
            },
            "countryName": {
              "type": "string",
              "description": "Country Name"
            },
            "taxType": {
              "type": "string",
              "description": "Tax Type"
            },
            "taxCode": {
              "type": "string",
              "description": "Tax Code"
            },
            "taxName": {
              "type": "string",
              "description": "Tax Name"
            },
            "taxRate": {
              "type": "number",
              "description": "Tax Rate",
              "format": "double"
            },
            "importRate": {
              "type": "number",
              "description": "Import Tax Rate",
              "format": "double"
            },
            "page": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            }
          }
        },
        "TaxInformationUploadData": {
          "type": "object",
          "properties": {
            "nationCode": {
              "type": "string",
              "description": "Nation Code"
            },
            "nationName": {
              "type": "string",
              "description": "Nation Name"
            },
            "countryCode": {
              "type": "string",
              "description": "Country Code"
            },
            "countryName": {
              "type": "string",
              "description": "Country Name"
            },
            "taxType": {
              "type": "string",
              "description": "Tax Type"
            },
            "taxCode": {
              "type": "string",
              "description": "Tax Code"
            },
            "taxName": {
              "type": "string",
              "description": "Tax Name"
            },
            "taxRate": {
              "type": "number",
              "description": "Tax Rate",
              "format": "double"
            },
            "importRate": {
              "type": "number",
              "description": "Import Tax Rate",
              "format": "double"
            }
          }
        },
        "PassDto": {
          "required": [
            "currentPass",
            "password"
          ],
          "type": "object",
          "properties": {
            "password": {
              "type": "string",
              "description": "New Password"
            },
            "currentPass": {
              "type": "string",
              "description": "Old Password"
            }
          }
        },
        "ResetPasswordDto": {
          "type": "object",
          "properties": {
            "username": {
              "type": "string",
              "description": "Username"
            },
            "newPassword": {
              "type": "string",
              "description": "New Password"
            }
          }
        },
        "LoginRecord": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The data id, Only apply for response",
              "format": "int64"
            },
            "username": {
              "type": "string",
              "description": "Username"
            },
            "loginTime": {
              "type": "string",
              "description": "Login Date Time Stamp",
              "format": "date-time"
            },
            "loginStatus": {
              "type": "string",
              "description": "Login Status"
            },
            "ipAddress": {
              "type": "string",
              "description": "IP Address"
            },
            "page": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            }
          }
        },
        "SysMenu": {
          "required": [
            "name",
            "parentId",
            "perms",
            "type"
          ],
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The data id, Only apply for response and update apis",
              "format": "int64"
            },
            "created": {
              "type": "string",
              "description": "Created date time,Only apply for response",
              "format": "date-time"
            },
            "updated": {
              "type": "string",
              "description": "Updated date time, Only apply for response",
              "format": "date-time"
            },
            "statu": {
              "type": "integer",
              "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
              "format": "int32"
            },
            "parentId": {
              "type": "integer",
              "description": "The upper-level menu item id",
              "format": "int64"
            },
            "name": {
              "type": "string",
              "description": "The Menu name"
            },
            "path": {
              "type": "string",
              "description": "The URL"
            },
            "perms": {
              "type": "string",
              "description": "The perms code"
            },
            "component": {
              "type": "string",
              "description": "The component path"
            },
            "type": {
              "type": "integer",
              "description": "0：main   1：item   2：button",
              "format": "int32"
            },
            "icon": {
              "type": "string",
              "description": "The icon string"
            },
            "orderNum": {
              "type": "integer",
              "description": "The sorting order number",
              "format": "int32"
            },
            "index": {
              "type": "string",
              "description": "The index, Only apply for response"
            },
            "children": {
              "type": "array",
              "description": "The sub meun list, Only apply for response",
              "items": {
                "$ref": "#/components/schemas/SysMenu"
              }
            }
          }
        },
        "StockTakeForm": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The data id, Only apply for response and update apis",
              "format": "int64"
            },
            "name": {
              "type": "string",
              "description": "The stock take action name"
            },
            "remark": {
              "type": "string",
              "description": "Remark"
            },
            "locationId": {
              "type": "integer",
              "description": "Stock take location id",
              "format": "int32"
            },
            "startTime": {
              "type": "string",
              "description": "Start date time stamp, apply for response only",
              "format": "date-time"
            },
            "endTime": {
              "type": "string",
              "description": "End date time stamp, apply for response only",
              "format": "date-time"
            },
            "status": {
              "type": "integer",
              "description": "Stock take status, 0 = Void, 1 = Active, 2 = Finished",
              "format": "int32"
            },
            "page": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            }
          }
        },
        "StockTakeDetail": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The data id, Only apply for response and update apis",
              "format": "int64"
            },
            "formId": {
              "type": "integer",
              "description": "Stock take form id",
              "format": "int32"
            },
            "productId": {
              "type": "integer",
              "description": "Product id",
              "format": "int32"
            },
            "locationId": {
              "type": "integer",
              "description": "Location id",
              "format": "int32"
            },
            "qty": {
              "type": "integer",
              "description": "Qtys",
              "format": "int32"
            },
            "timeAt": {
              "type": "string",
              "description": "Date Time stamp, apply for response only",
              "format": "date-time"
            },
            "page": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            }
          }
        },
        "ProductList": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The data id, Only apply for response and update apis",
              "format": "int64"
            },
            "created": {
              "type": "string",
              "description": "Created date time,Only apply for response",
              "format": "date-time"
            },
            "updated": {
              "type": "string",
              "description": "Updated date time, Only apply for response",
              "format": "date-time"
            },
            "statu": {
              "type": "integer",
              "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
              "format": "int32"
            },
            "productCode": {
              "type": "string",
              "description": "The product code"
            },
            "productName": {
              "type": "string",
              "description": "The product name"
            },
            "itemCode": {
              "type": "string",
              "description": "The item code"
            },
            "brandName": {
              "type": "string",
              "description": "The brand code"
            },
            "typeId": {
              "type": "integer",
              "description": "The product type data id",
              "format": "int32"
            },
            "unit": {
              "type": "string",
              "description": "Unit"
            },
            "description": {
              "type": "string",
              "description": "Product Description"
            },
            "retailPrice": {
              "type": "number",
              "description": "Product Retail Price",
              "format": "double"
            },
            "deptId": {
              "type": "integer",
              "description": "The DEPARTMENT data id",
              "format": "int32"
            },
            "vendorId": {
              "type": "integer",
              "description": "The Vendor data id",
              "format": "int32"
            },
            "tax": {
              "type": "integer",
              "description": "1 = Taxable, 0 Non Taxable",
              "format": "int32"
            },
            "taxCode": {
              "type": "string",
              "description": "Sales Tax/VAT code"
            },
            "taxRate": {
              "type": "number",
              "description": "Plus Sales Tax/VAT Amount",
              "format": "double"
            },
            "afterTax": {
              "type": "number",
              "description": "Plus Sales Tax/VAT Amount",
              "format": "double"
            },
            "taxAmount": {
              "type": "number",
              "description": "Sales Tax/VAT Amount",
              "format": "double"
            },
            "page": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            },
            "productListFiles": {
              "type": "array",
              "description": "Only apply for response for add product files",
              "items": {
                "$ref": "#/components/schemas/ProductListFile"
              }
            },
            "newProductListFiles": {
              "type": "array",
              "description": "Only apply for response for add product files",
              "items": {
                "$ref": "#/components/schemas/ProductListFile"
              }
            }
          }
        },
        "ProductListFile": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The data id, Only apply for response and update apis",
              "format": "int64"
            },
            "created": {
              "type": "string",
              "description": "Created date time,Only apply for response",
              "format": "date-time"
            },
            "updated": {
              "type": "string",
              "description": "Updated date time, Only apply for response",
              "format": "date-time"
            },
            "statu": {
              "type": "integer",
              "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
              "format": "int32"
            },
            "productId": {
              "type": "integer",
              "description": "The product data id",
              "format": "int32"
            },
            "fileName": {
              "type": "string",
              "description": "Uploaded file name"
            },
            "base64": {
              "type": "string",
              "description": "File content in base64"
            }
          },
          "description": "Only apply for response for add product files"
        },
        "ProductType": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The data id, Only apply for response and update apis",
              "format": "int64"
            },
            "created": {
              "type": "string",
              "description": "Created date time,Only apply for response",
              "format": "date-time"
            },
            "updated": {
              "type": "string",
              "description": "Updated date time, Only apply for response",
              "format": "date-time"
            },
            "statu": {
              "type": "integer",
              "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
              "format": "int32"
            },
            "typeCode": {
              "type": "string",
              "description": "The type code"
            },
            "typeName": {
              "type": "string",
              "description": "The type name"
            },
            "typeOtherName": {
              "type": "string",
              "description": "The type other name"
            },
            "remark": {
              "type": "string",
              "description": "Remark"
            },
            "page": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            }
          }
        },
        "ProductLocation": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The data id, Only apply for response and update apis",
              "format": "int64"
            },
            "productId": {
              "type": "integer",
              "description": "The product data id",
              "format": "int32"
            },
            "locationId": {
              "type": "integer",
              "description": "The location data id",
              "format": "int32"
            },
            "qty": {
              "type": "integer",
              "description": "Total qty",
              "format": "int32"
            },
            "totalPrice": {
              "type": "number",
              "description": "Total price",
              "format": "double"
            },
            "cost": {
              "type": "integer",
              "description": "For request only, if case Total cost",
              "format": "int32"
            },
            "otherQty": {
              "type": "integer",
              "description": "For request only, if case other qty",
              "format": "int32"
            },
            "page": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            }
          }
        },
        "ProductLocationChangeDto": {
          "type": "object",
          "properties": {
            "productId": {
              "type": "integer",
              "description": "The product data id",
              "format": "int32"
            },
            "newPlace": {
              "type": "integer",
              "description": "New location id",
              "format": "int32"
            },
            "oldPlace": {
              "type": "integer",
              "description": "Old location id",
              "format": "int32"
            },
            "qty": {
              "type": "integer",
              "description": "Old Location Qtys",
              "format": "int32"
            },
            "newPlaceQty": {
              "type": "integer",
              "description": "New Location Qtys",
              "format": "int32"
            },
            "cost": {
              "type": "number",
              "description": "Costs",
              "format": "double"
            },
            "otherQty": {
              "type": "integer",
              "description": "Other Qtys",
              "format": "int32"
            }
          }
        },
        "ProductListUploadDto": {
          "type": "object",
          "properties": {
            "productCode": {
              "type": "string",
              "description": "The product code"
            },
            "productName": {
              "type": "string",
              "description": "The product name"
            },
            "itemCode": {
              "type": "string",
              "description": "The item code"
            },
            "brandName": {
              "type": "string",
              "description": "The brand code"
            },
            "typeCode": {
              "type": "string",
              "description": "The type code"
            },
            "typeName": {
              "type": "string",
              "description": "The type name"
            },
            "unit": {
              "type": "string",
              "description": "Unit"
            },
            "description": {
              "type": "string",
              "description": "Product Description"
            },
            "retailPrice": {
              "type": "number",
              "description": "Product Retail Price",
              "format": "double"
            },
            "departmentCode": {
              "type": "string",
              "description": "The department code"
            },
            "departmentName": {
              "type": "string",
              "description": "The department name"
            },
            "vendorCode": {
              "type": "string",
              "description": "The vendor code"
            },
            "vendorName": {
              "type": "string",
              "description": "The vendor name"
            },
            "vendorOtherName": {
              "type": "string",
              "description": "The vendor other name"
            },
            "vendorType": {
              "type": "string",
              "description": "Vendor Type"
            },
            "vendorEmail": {
              "type": "string",
              "description": "Vendor Email"
            },
            "vendorPhone": {
              "type": "string",
              "description": "Vendor Phone"
            },
            "vendorFax": {
              "type": "string",
              "description": "Vendor Fax"
            },
            "vendorAddress": {
              "type": "string",
              "description": "Vendor Address"
            },
            "vendorContactPerson": {
              "type": "string",
              "description": "Vendor Contact Person"
            },
            "vendorRemark": {
              "type": "string",
              "description": "Vendor Remark"
            },
            "tax": {
              "type": "integer",
              "description": "1 = Taxable, 0 Non Taxable",
              "format": "int32"
            },
            "taxCode": {
              "type": "string",
              "description": "Sales Tax/VAT code"
            },
            "taxRate": {
              "type": "number",
              "description": "Plus Sales Tax/VAT Amount",
              "format": "double"
            },
            "afterTax": {
              "type": "number",
              "description": "Plus Sales Tax/VAT Amount",
              "format": "double"
            },
            "taxAmount": {
              "type": "number",
              "description": "Sales Tax/VAT Amount",
              "format": "double"
            },
            "productLocations": {
              "type": "array",
              "description": "Product Location List",
              "items": {
                "$ref": "#/components/schemas/ProductLocationUploadDto"
              }
            }
          }
        },
        "ProductLocationUploadDto": {
          "type": "object",
          "properties": {
            "placeCode": {
              "type": "string",
              "description": "The Place Code"
            },
            "placeName": {
              "type": "string",
              "description": "The Place Name"
            },
            "qty": {
              "type": "integer",
              "description": "Qtys",
              "format": "int32"
            },
            "totalPrice": {
              "type": "number",
              "description": "Total Price",
              "format": "double"
            },
            "stockMovePlaceToCode": {
              "type": "string",
              "description": "Stock Move to new location code"
            },
            "stockMovePlaceToName": {
              "type": "string",
              "description": "Stock Move to new location name"
            },
            "stockMovePlaceToQty": {
              "type": "integer",
              "description": "Stock Move to new location qtys",
              "format": "int32"
            },
            "stockMovePlaceToTotalPrice": {
              "type": "number",
              "description": "Stock Move to new location total price",
              "format": "double"
            }
          },
          "description": "Product Location List"
        },
        "Payment": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The data id, Only apply for response and update apis",
              "format": "int64"
            },
            "invoiceId": {
              "type": "integer",
              "description": "The invoice data id",
              "format": "int32"
            },
            "method": {
              "type": "string",
              "description": "The payment method"
            },
            "amount": {
              "type": "number",
              "description": "The payment amount",
              "format": "double"
            },
            "paymentTime": {
              "type": "string",
              "description": "The payment time stamp",
              "format": "date-time"
            }
          }
        },
        "Invoice": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The data id, Only apply for response and update apis",
              "format": "int64"
            },
            "number": {
              "type": "string",
              "description": "Invoice No."
            },
            "memberId": {
              "type": "integer",
              "description": "Member data id",
              "format": "int32"
            },
            "totalAmount": {
              "type": "number",
              "description": "Sales Total amount",
              "format": "double"
            },
            "discount": {
              "type": "number",
              "description": "Sales discount",
              "format": "double"
            },
            "discountType": {
              "type": "string",
              "description": "Sales discount Type"
            },
            "locationId": {
              "type": "integer",
              "description": "Sales Location data id",
              "format": "int32"
            },
            "taxTotal": {
              "type": "number",
              "description": "Sales Tax/VAT total amount",
              "format": "double"
            },
            "taxRefNo": {
              "type": "string",
              "description": "Sales Tax/VAT reference number"
            },
            "voidNum": {
              "type": "integer",
              "description": "0 = active, 1 = void",
              "format": "int32"
            },
            "createdAt": {
              "type": "string",
              "description": "Created date time, Only apply for response",
              "format": "date-time"
            },
            "voidAt": {
              "type": "string",
              "description": "Void date time, Only apply for response",
              "format": "date-time"
            },
            "page": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            },
            "dateTo": {
              "type": "string",
              "description": "Only apply for paging in list api, date range to",
              "format": "date-time"
            },
            "dateFrom": {
              "type": "string",
              "description": "Only apply for paging in list api, date range from",
              "format": "date-time"
            },
            "invoiceItems": {
              "type": "array",
              "description": "Only apply for response only, invoice po items",
              "items": {
                "$ref": "#/components/schemas/InvoiceItemListDto"
              }
            },
            "newInvoiceItems": {
              "type": "array",
              "description": "Only apply for request only, invoice po items to add",
              "items": {
                "$ref": "#/components/schemas/InvoiceItem"
              }
            },
            "paymentItems": {
              "type": "array",
              "description": "Only apply for response only, invoice payments",
              "items": {
                "$ref": "#/components/schemas/Payment"
              }
            },
            "newPaymentItems": {
              "type": "array",
              "description": "Only apply for request only, invoice payments to add",
              "items": {
                "$ref": "#/components/schemas/Payment"
              }
            }
          }
        },
        "InvoiceItem": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The data id, Only apply for response and update apis",
              "format": "int64"
            },
            "invoiceId": {
              "type": "integer",
              "description": "The invoice data id",
              "format": "int32"
            },
            "productId": {
              "type": "integer",
              "description": "The product data id",
              "format": "int32"
            },
            "qty": {
              "type": "integer",
              "description": "The sales qty",
              "format": "int32"
            },
            "price": {
              "type": "number",
              "description": "The sales total price",
              "format": "double"
            },
            "discount": {
              "type": "number",
              "description": "The discount amount/number",
              "format": "double"
            },
            "discountType": {
              "type": "string",
              "description": "The discount type"
            },
            "taxType": {
              "type": "string",
              "description": "The TAX TYPE"
            },
            "taxCode": {
              "type": "string",
              "description": "The sales tax/VAT code"
            },
            "taxRate": {
              "type": "number",
              "description": "The sales tax/VAT Rate",
              "format": "double"
            },
            "taxAmount": {
              "type": "number",
              "description": "The taxable amount",
              "format": "double"
            }
          },
          "description": "Only apply for request only, invoice po items to add"
        },
        "InvoiceItemListDto": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The data id, Only apply for response and update apis",
              "format": "int64"
            },
            "invoiceId": {
              "type": "integer",
              "description": "The invoice data id",
              "format": "int32"
            },
            "productId": {
              "type": "integer",
              "description": "The product data id",
              "format": "int32"
            },
            "qty": {
              "type": "integer",
              "description": "The sales qty",
              "format": "int32"
            },
            "price": {
              "type": "number",
              "description": "The sales total price",
              "format": "double"
            },
            "discount": {
              "type": "number",
              "description": "The discount amount/number",
              "format": "double"
            },
            "discountType": {
              "type": "string",
              "description": "The discount type"
            },
            "taxType": {
              "type": "string",
              "description": "The TAX TYPE"
            },
            "taxCode": {
              "type": "string",
              "description": "The sales tax/VAT code"
            },
            "taxRate": {
              "type": "number",
              "description": "The sales tax/VAT Rate",
              "format": "double"
            },
            "taxAmount": {
              "type": "number",
              "description": "The taxable amount",
              "format": "double"
            },
            "productCode": {
              "type": "string",
              "description": "The product code, response only"
            },
            "productName": {
              "type": "string",
              "description": "The product name, response only"
            }
          },
          "description": "Only apply for response only, invoice po items"
        },
        "InvRecord": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The data id, Only apply for response and update apis",
              "format": "int64"
            },
            "qty": {
              "type": "integer",
              "description": "Qtys",
              "format": "int32"
            },
            "productId": {
              "type": "integer",
              "description": "The product data id",
              "format": "int32"
            },
            "locFrom": {
              "type": "integer",
              "description": "The location from (data id)",
              "format": "int32"
            },
            "locTo": {
              "type": "integer",
              "description": "The location to (data id)",
              "format": "int32"
            },
            "cost": {
              "type": "number",
              "description": "The total cost",
              "format": "double"
            },
            "staff": {
              "type": "string",
              "description": "The staff id"
            },
            "timeAt": {
              "type": "string",
              "description": "The date time stamp, only apply for response",
              "format": "date-time"
            },
            "timeAtFrom": {
              "type": "string",
              "description": "Only apply for paging in list api, the date time range from",
              "format": "date-time"
            },
            "timeAtTo": {
              "type": "string",
              "description": "Only apply for paging in list api, the date time range to",
              "format": "date-time"
            },
            "page": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            }
          }
        },
        "Vendor": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The data id, Only apply for response and update apis",
              "format": "int64"
            },
            "created": {
              "type": "string",
              "description": "Created date time,Only apply for response",
              "format": "date-time"
            },
            "updated": {
              "type": "string",
              "description": "Updated date time, Only apply for response",
              "format": "date-time"
            },
            "statu": {
              "type": "integer",
              "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
              "format": "int32"
            },
            "vendorCode": {
              "type": "string",
              "description": "Vendor Code"
            },
            "vendorName": {
              "type": "string",
              "description": "Vendor Name"
            },
            "vendorOtherName": {
              "type": "string"
            },
            "type": {
              "type": "string",
              "description": "Type"
            },
            "email": {
              "type": "string",
              "description": "Email Address"
            },
            "phone": {
              "type": "string",
              "description": "Phone Number"
            },
            "fax": {
              "type": "string",
              "description": "Fax Number"
            },
            "address": {
              "type": "string",
              "description": "Vendor Address"
            },
            "contactPerson": {
              "type": "string",
              "description": "Contact Person Name/Position"
            },
            "remark": {
              "type": "string",
              "description": "Remark"
            },
            "page": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            }
          }
        },
        "Member": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The data id, Only apply for response and update apis",
              "format": "int64"
            },
            "name": {
              "type": "string",
              "description": "The member name"
            },
            "address": {
              "type": "string",
              "description": "The member mail address"
            },
            "phone": {
              "type": "string",
              "description": "The member phone number"
            },
            "email": {
              "type": "string",
              "description": "The member email address"
            },
            "fax": {
              "type": "string",
              "description": "The member fax number"
            },
            "classes": {
              "type": "integer",
              "description": "The member class",
              "format": "int32"
            },
            "createdAt": {
              "type": "string",
              "description": "The created time stamp, only apply for respone",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "description": "The updated time stamp, only apply for respone",
              "format": "date-time"
            },
            "status": {
              "type": "integer",
              "description": "1 = active, 0 = inactive",
              "format": "int32"
            },
            "page": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            },
            "memberSpecialDays": {
              "type": "array",
              "description": "The member special days list",
              "items": {
                "$ref": "#/components/schemas/MemberSpecialDay"
              }
            },
            "className": {
              "type": "string",
              "description": "For request only, if case member class name"
            }
          }
        },
        "MemberSpecialDay": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The data id, Only apply for response and update apis",
              "format": "int64"
            },
            "memberId": {
              "type": "integer",
              "description": "The member data id",
              "format": "int32"
            },
            "name": {
              "type": "string",
              "description": "The special date name"
            },
            "date": {
              "type": "string",
              "description": "The special date",
              "format": "date-time"
            },
            "remark": {
              "type": "string",
              "description": "remark"
            },
            "createdAt": {
              "type": "string",
              "description": "The created time stamp, only apply for respone",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "description": "The updated time stamp, only apply for respone",
              "format": "date-time"
            },
            "status": {
              "type": "integer",
              "description": "1 = active, 0 = inactive",
              "format": "int32"
            },
            "page": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            }
          },
          "description": "The member special days list"
        },
        "MemberClass": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The data id, Only apply for response and update apis",
              "format": "int64"
            },
            "name": {
              "type": "string",
              "description": "Name"
            },
            "remark": {
              "type": "string",
              "description": "Remark"
            },
            "createdAt": {
              "type": "string",
              "description": "The created time stamp, only apply for respone",
              "format": "date-time"
            },
            "updatedAt": {
              "type": "string",
              "description": "The updated time stamp, only apply for respone",
              "format": "date-time"
            },
            "status": {
              "type": "integer",
              "description": "1 = active, 0 = inactive",
              "format": "int32"
            },
            "page": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            }
          }
        },
        "Location": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The data id, Only apply for response and update apis",
              "format": "int64"
            },
            "created": {
              "type": "string",
              "description": "Created date time,Only apply for response",
              "format": "date-time"
            },
            "updated": {
              "type": "string",
              "description": "Updated date time, Only apply for response",
              "format": "date-time"
            },
            "statu": {
              "type": "integer",
              "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
              "format": "int32"
            },
            "placeCode": {
              "type": "string",
              "description": "The location code"
            },
            "placeName": {
              "type": "string",
              "description": "The location name"
            },
            "placeOtherName": {
              "type": "string",
              "description": "The location other name"
            },
            "country": {
              "type": "string",
              "description": "The location country code"
            },
            "address": {
              "type": "string",
              "description": "The location address"
            },
            "zipCode": {
              "type": "string",
              "description": "The location zip code"
            },
            "remark": {
              "type": "string",
              "description": "The remark"
            },
            "page": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            }
          }
        },
        "Department": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The data id, Only apply for response and update apis",
              "format": "int64"
            },
            "created": {
              "type": "string",
              "description": "Created date time,Only apply for response",
              "format": "date-time"
            },
            "updated": {
              "type": "string",
              "description": "Updated date time, Only apply for response",
              "format": "date-time"
            },
            "statu": {
              "type": "integer",
              "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
              "format": "int32"
            },
            "deptCode": {
              "type": "string",
              "description": "The department code"
            },
            "deptName": {
              "type": "string",
              "description": "The department name"
            },
            "deptOtherName": {
              "type": "string",
              "description": "The department other name"
            },
            "deptRemark": {
              "type": "string",
              "description": "The remark"
            },
            "page": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            }
          }
        },
        "CodeType": {
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "description": "The data id, Only apply for response and update apis",
              "format": "int64"
            },
            "created": {
              "type": "string",
              "description": "Created date time,Only apply for response",
              "format": "date-time"
            },
            "updated": {
              "type": "string",
              "description": "Updated date time, Only apply for response",
              "format": "date-time"
            },
            "statu": {
              "type": "integer",
              "description": "Active status, 1 = Active, 0 = Void, Only apply for response",
              "format": "int32"
            },
            "type": {
              "type": "string",
              "description": "The categroy type"
            },
            "valueCode": {
              "type": "string",
              "description": "The value code"
            },
            "valueName": {
              "type": "string",
              "description": "The value name"
            },
            "page": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            }
          }
        },
        "ActionRecordBody": {
          "type": "object",
          "properties": {
            "page": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            },
            "limit": {
              "type": "integer",
              "description": "Only apply for paging in list api",
              "format": "int32"
            }
          }
        }
      },
      "securitySchemes": {
        "auth": {
          "type": "http",
          "description": "JWT authentication",
          "in": "header",
          "scheme": "bearer",
          "bearerFormat": "JWT"
        }
      }
    }
  }